CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(ouzo)

# Finds all source files and adds them.
FILE(GLOB OUZO_SRC "src/*.cpp" "include/*.hpp")
ADD_EXECUTABLE(ouzo ${OUZO_SRC})

# Fetch modules from ./cmake/Modules
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules")

# Enable C++11
IF(UNIX)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")
ENDIF()

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGLEW_STATIC")

SET(BIN_DIR ${CMAKE_SOURCE_DIR}/bin)

# Define OUZO_DEBUG in debug mode.
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DOUZO_DEBUG")

MARK_AS_ADVANCED(CLEAR FREEIMAGE_INCLUDE_DIRS)

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLFW3 REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(GLM REQUIRED)
FIND_PACKAGE(FreeImage REQUIRED)
FIND_PACKAGE(Freetype REQUIRED)

INCLUDE_DIRECTORIES(${FREETYPE_INCLUDE_DIRS} ${FREEIMAGE_INCLUDE_DIRS} ${GLM_INCLUDE_DIRS} ${GLEW_INCLUDE_DIRS} ${OPENGL_INCLUDE_DIR} ${GLFW3_INCLUDE_DIR} ${CMAKE_SOURCE_DIR}/include)
TARGET_LINK_LIBRARIES(ouzo ${FREETYPE_LIBRARIES} ${FREEIMAGE_LIBRARIES} ${GLEW_LIBRARIES} ${OPENGL_gl_LIBRARY} ${GLFW3_LIBRARY})
