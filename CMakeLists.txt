CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(ouzo)

FILE(GLOB_RECURSE OUZO_SOURCE_FILES "include/*.h" "include/*.hpp" "src/*.cpp")

# Taken from: https://cmake.org/pipermail/cmake/2013-November/056336.html
MACRO(GROUP_SOURCES curdir)
	FILE(GLOB children RELATIVE ${PROJECT_SOURCE_DIR}/${curdir} ${PROJECT_SOURCE_DIR}/${curdir}/*)
	FOREACH(child ${children})
		IF(IS_DIRECTORY ${PROJECT_SOURCE_DIR}/${curdir}/${child})
			GROUP_SOURCES(${curdir}/${child})
		ELSE()
			STRING(REPLACE "/" "\\" groupname ${curdir})
			SOURCE_GROUP(${groupname} FILES ${PROJECT_SOURCE_DIR}/${curdir}/${child})
		ENDIF()
	ENDFOREACH()
ENDMACRO()

GROUP_SOURCES("src")
GROUP_SOURCES("include")

ADD_EXECUTABLE(ouzo ${OUZO_SOURCE_FILES})

# Fetch modules from ./cmake/Modules
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules")

# Enable C++11
IF(UNIX)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")
ENDIF()

SET(BIN_DIR ${CMAKE_SOURCE_DIR}/bin)

# Define OUZO_DEBUG in debug mode.
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DOUZO_DEBUG")

MARK_AS_ADVANCED(CLEAR FREEIMAGE_INCLUDE_DIRS)

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(SDL2 REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(GLM REQUIRED)
FIND_PACKAGE(FreeImage REQUIRED)
FIND_PACKAGE(Freetype REQUIRED)

INCLUDE_DIRECTORIES(	
	${FREETYPE_INCLUDE_DIRS} 
	${FREEIMAGE_INCLUDE_DIRS} 
	${GLM_INCLUDE_DIRS}
	${GLEW_INCLUDE_DIRS}
	${OPENGL_INCLUDE_DIR}
	${SDL2_INCLUDE_DIR}
	${CMAKE_SOURCE_DIR}/include	
)

TARGET_LINK_LIBRARIES(
	ouzo 
	${FREETYPE_LIBRARIES}
	${FREEIMAGE_LIBRARIES}
	${GLEW_LIBRARIES}
	${OPENGL_gl_LIBRARY}
	${SDL2_LIBRARY}
	${SDL2MAIN_LIBRARY}
)